<Application x:Class="PreFinal.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PreFinal"
             StartupUri="MainWindow.xaml"
             xmlns:userinfo ="clr-namespace:APIModels.DataFiles"
             >
    <Application.Resources>
        <Style TargetType="Border">
            <Setter Property="CornerRadius"
                    Value="5" />
        </Style>
        <Style TargetType="Button" x:Key="StartPageBtn">
            <Setter Property="FontSize"
                    Value="18pt" />
            <Setter Property="Width"
                    Value="300"/>
            <Setter Property="Height"
                    Value="60"/>
        </Style>

        <Style TargetType="TextBox" x:Key="TxbForEditInDataGrid">
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="IsReadOnly" Value="False"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" x:Key="CmbLocForEditInDataGrid">
            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.MainLocationsList}"/>
            <Setter Property="DisplayMemberPath" Value="Location"/>
            <Setter Property="SelectedValuePath" Value="Id"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" x:Key="CmbWrkplcForEditInDataGrid">
            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.changedWorkplaces}"/>
            <Setter Property="DisplayMemberPath" Value="Place"/>
            <Setter Property="SelectedValuePath" Value="Id"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Width" Value="150"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.changedWorkplaces}" Value="{x:Null}">
                    <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.MainWorkplacesList}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" x:Key="CmbEditInDataGrid">
            <Setter Property="SelectedValuePath" Value="Id"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Width" Value="150"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackPanel" x:Key="CancelSaveBtns">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackPanel" x:Key="EditBtnsInList"> 
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.IsEditBtnPressed}" Value="true">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="Button" x:Key="EditBtnInListVisible">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.role}" Value="Пользователь">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="MenuBtnVisibleTrigger">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsAdmin}" Value="false">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="StackPanel" x:Key="MenuPanel">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.1" Color="#112236" />
                            <GradientStop Offset="1" Color="#1d3b5d" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Width" Value="250"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding isAnimate}" Value="true">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox" x:Key="filtredCmb">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoaded}" Value="false">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
